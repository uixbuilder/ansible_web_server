---
- name: Ensure git is installed
  ansible.builtin.apt:
    name: git
    state: present

- name: Ensure web user exists
  ansible.builtin.user:
    name: "{{ nginx_user }}"
    shell: /bin/bash
    state: present

- name: Ensure /opt is owned by root:devops (optional, for hygiene)
  ansible.builtin.file:
    path: /opt
    state: directory
    owner: "{{ devops_user }}"
    group: root
    mode: '0755'

- name: Stat {{ web_root }}
  ansible.builtin.stat:
    path: "{{ web_root }}"
    get_attributes: true
  register: webcontent_static_sites_dir

- name: Remove web root if present and not owned by web user
  ansible.builtin.file:
    path: "{{ web_root }}"
    state: absent
  when:
    - webcontent_static_sites_dir.stat.exists
    - webcontent_static_sites_dir.stat.pw_name is defined
    - webcontent_static_sites_dir.stat.pw_name != nginx_user

- name: Ensure web root exists and is owned by web user (for git clone)
  ansible.builtin.file:
    path: "{{ web_root }}"
    state: directory
    owner: "{{ nginx_user }}"
    group: "{{ nginx_user }}"
    mode: '0755'

- name: Ensure Ansible remote_tmp exists and is owned by web user
  ansible.builtin.file:
    path: /home/{{ nginx_user }}/.ansible/tmp
    state: directory
    owner: "{{ nginx_user }}"
    group: "{{ nginx_user }}"
    mode: '0700'
    recurse: true

- name: Clone website content from Git
  ansible.builtin.git:
    repo: "{{ web_content_repo }}"
    dest: "{{ web_root }}"
    version: master
    force: true
  become: true
  become_user: "{{ nginx_user }}"

- name: Ensure all website files are owned by web user
  ansible.builtin.file:
    path: "{{ web_root }}"
    state: directory
    recurse: true
    owner: "{{ nginx_user }}"
    group: "{{ nginx_user }}"
